name: Rust CI

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.job.os }}-${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, use-cross: false, feature-flags: ""  }
          # - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu, use-cross: true, feature-flags: "" }
          # - { os: windows-latest, target: x86_64-pc-windows-gnu, use-cross: false, feature-flags: ""  }
          # - { os: macos-latest, target: universal-apple-darwin, use-cross: false, feature-flags: ""  }
    steps:
      - name: Checkout code and toolchain
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run formatter check
        run: cargo fmt --all -- --check

      - name: Run tests
        run: cargo test --all

      - name: Build project
        run: cargo build --locked --release ${{ matrix.job.feature-flags }} 
